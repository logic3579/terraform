# GCP Terraform Variables Example
# Rename this file to terraform.tfvars and update with your values

# 项目配置
project_id   = "your-project-id"
project_name = "your-project-name"

# 默认区域配置
default_region = "asia-southeast1"
default_zone   = "asia-southeast1-a"

# 当前 VPC 配置
current_vpc_name = "your-vpc-name"

# 防火墙规则配置
firewall_rules = {
  "allow-ssh" = {
    name          = "your-project-name-allow-ssh"
    description   = "Allow SSH access to instances with specific tags"
    priority      = 1000
    source_ranges = ["0.0.0.0/0"]
    target_tags   = ["k8s-manager", "algorithm"]
    allow = [
      {
        protocol = "tcp"
        ports    = ["22"]
      }
    ]
  }
  "allow-algorithm" = {
    name          = "your-project-name-allow-algorithm"
    description   = "Allow external requests to algorithm instances"
    priority      = 1000
    source_ranges = ["0.0.0.0/0"]
    target_tags   = ["algorithm"]
    allow = [
      {
        protocol = "tcp"
        ports    = ["8000", "8080"]
      }
    ]
  }
  "allow-internal" = {
    name          = "your-project-name-allow-internal"
    description   = "Allow all internal communication within 172.0.0.0/16 network"
    priority      = 65534
    source_ranges = ["172.0.0.0/16"]
    allow = [
      {
        protocol = "tcp"
        ports    = ["0-65535"]
      },
      {
        protocol = "udp"
        ports    = ["0-65535"]
      },
      {
        protocol = "icmp"
        ports    = null
      }
    ]
  }
}

# 示例：多个防火墙规则配置
# firewall_rules = {
#   "allow-ssh" = {
#     name          = "my-project-allow-ssh"
#     description   = "Allow SSH access"
#     priority      = 1000
#     source_ranges = ["0.0.0.0/0"]
#     target_tags   = ["ssh-enabled"]
#     allow = [
#       {
#         protocol = "tcp"
#         ports    = ["22"]
#       }
#     ]
#   }
#   "allow-http-https" = {
#     name          = "my-project-allow-web"
#     description   = "Allow HTTP and HTTPS traffic"
#     priority      = 1000
#     source_ranges = ["0.0.0.0/0"]
#     target_tags   = ["web-server"]
#     allow = [
#       {
#         protocol = "tcp"
#         ports    = ["80", "443"]
#       }
#     ]
#   }
#   "allow-internal-all" = {
#     name          = "my-project-allow-internal"
#     description   = "Allow all internal traffic"
#     priority      = 65534
#     source_ranges = ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
#     allow = [
#       {
#         protocol = "tcp"
#         ports    = ["0-65535"]
#       },
#       {
#         protocol = "udp"
#         ports    = ["0-65535"]
#       },
#       {
#         protocol = "icmp"
#       }
#     ]
#   }
# }

# 多区域子网配置
subnet_configs = {
  "algorithm-ew1" = {
    region             = "europe-west2"
    primary_ipv4_range = "172.20.10.0/24"
  }
  "algorithm-uc1" = {
    region             = "us-central1"
    primary_ipv4_range = "172.20.11.0/24"
  }
  "algorithm-as1" = {
    region             = "asia-southeast1"
    primary_ipv4_range = "172.20.12.0/24"
  }
  "algorithm-ew2" = {
    region             = "europe-west2"
    primary_ipv4_range = "172.20.13.0/24"
  }
}

# VM 实例配置 - 支持每个实例完全定制化配置
vm_instances = {
  "europe-west2" = {
    instances = [
      {
        name          = "algorithm-ew2-vm1"
        machine_type  = "custom-8-16384"  # 8 vCPU, 16GB RAM
        zone          = "europe-west2-b"
        image_family  = "ubuntu-2204-lts"
        image_project = "ubuntu-os-cloud"
        disk_size     = 20
        disk_type     = "pd-balanced"
        network_tags  = ["algorithm"]
        network       = "your-vpc-name"
        subnetwork    = "algorithm-ew2"
      },
    ]
  }
}

# 示例：完整的三个区域配置，每个实例完全定制化
# vm_instances = {
#   "europe-west1" = {
#     instances = [
#       {
#         name          = "algorithm-ew1-vm1"
#         machine_type  = "custom-8-16384"  # 8 vCPU, 16GB RAM
#         zone          = "europe-west1-a"
#         image_family  = "ubuntu-2204-lts"
#         image_project = "ubuntu-os-cloud"
#         disk_size     = 20
#         disk_type     = "pd-balanced"
#         network_tags  = ["algorithm"]
#         network       = "your-vpc-name"
#         subnetwork    = "algorithm-ew1"
#       },
#       {
#         name          = "algorithm-ew1-vm2"
#         machine_type  = "custom-8-16384"  # 8 vCPU, 16GB RAM
#         zone          = "europe-west1-b"
#         image_family  = "ubuntu-2204-lts"
#         image_project = "ubuntu-os-cloud"
#         disk_size     = 20
#         disk_type     = "pd-balanced"
#         network_tags  = ["algorithm"]
#         network       = "your-vpc-name"
#         subnetwork    = "algorithm-ew1"
#       }
#     ]
#   }
#   "us-central1" = {
#     instances = [
#       {
#         name          = "algorithm-uc1-vm1"
#         machine_type  = "custom-8-16384"  # 8 vCPU, 16GB RAM
#         zone          = "us-central1-a"
#         image_family  = "ubuntu-2204-lts"
#         image_project = "ubuntu-os-cloud"
#         disk_size     = 20
#         disk_type     = "pd-balanced"
#         network_tags  = ["algorithm"]
#         network       = "your-vpc-name"
#         subnetwork    = "algorithm-uc1"
#       }
#     ]
#   }
#   "asia-southeast1" = {
#     instances = [
#       {
#         name          = "algorithm-as1-vm1"
#         machine_type  = "custom-8-16384"  # 8 vCPU, 16GB RAM
#         zone          = "asia-southeast1-a"
#         image_family  = "ubuntu-2204-lts"
#         image_project = "ubuntu-os-cloud"
#         disk_size     = 20
#         disk_type     = "pd-balanced"
#         network_tags  = ["algorithm"]
#         network       = "your-vpc-name"
#         subnetwork    = "algorithm-as1"
#       }
#     ]
#   }
# }

# Instance Group 配置
instance_groups = {
  "algorithm-ew2-a" = {
    name        = "algorithm-ew2-a-ig"
    description = "Instance group for algorithm VMs in europe-west2-a"
    zone        = "europe-west2-a"
    instances   = ["europe-west2-0"]  # VM instance keys
    named_ports = [
      {
        name = "backend-rtb-adaptor"
        port = 8080
      },
      {
        name = "revo-ai"
        port = 8000
      }
    ]
  }
}

# 示例：多个 Instance Group 配置
# instance_groups = {
#   "algorithm-ew2-a" = {
#     name        = "algorithm-ew2-a-ig"
#     description = "Instance group for algorithm VMs in europe-west2-a"
#     zone        = "europe-west2-a"
#     instances   = ["europe-west2-0", "europe-west2-1"]
#     named_ports = [
#       {
#         name = "backend-rtb-adaptor"
#         port = 8080
#       },
#       {
#         name = "revo-ai"
#         port = 8000
#       }
#     ]
#   }
#   "algorithm-uc1-a" = {
#     name        = "algorithm-uc1-a-ig"
#     description = "Instance group for algorithm VMs in us-central1-a"
#     zone        = "us-central1-a"
#     instances   = ["us-central1-0"]
#     named_ports = [
#       {
#         name = "backend-rtb-adaptor"
#         port = 8080
#       },
#       {
#         name = "revo-ai"
#         port = 8000
#       }
#     ]
#   }
# }



# 网络配置说明：
# 防火墙规则支持多协议、多端口、自定义优先级和目标标签
# VM 使用静态外部 IP 地址，每个实例完全定制化配置
# Instance Group 支持多个实例和自定义命名端口